////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2007 Xilinx, Inc.
// All Right Reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 9.2i
//  \   \         Application : ISE
//  /   /         Filename : test1.ant
// /___/   /\     Timestamp : Mon Oct 22 16:17:05 2012
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: 
//Design Name: test1
//Device: Xilinx
//
`timescale 1ns/1ps

module test1;
    reg resetb = 1'b0;
    reg clock = 1'b0;
    wire asb;
    wire rw;
    wire [5:0] iadr;
    wire [5:0] idat;
    wire [5:0] madr;
    wire [5:0] mdat;
    wire RIR;
    wire WIR;
    wire RPC;
    wire CPC;
    wire SDM;
    wire WDR;
    wire DOE;

    parameter PERIOD = 200;
    parameter real DUTY_CYCLE = 0.5;
    parameter OFFSET = 0;

    initial    // Clock process for clock
    begin
        #OFFSET;
        forever
        begin
            clock = 1'b0;
            #(PERIOD-(PERIOD*DUTY_CYCLE)) clock = 1'b1;
            #(PERIOD*DUTY_CYCLE);
        end
    end

    smicro UUT (
        .resetb(resetb),
        .clock(clock),
        .asb(asb),
        .rw(rw),
        .iadr(iadr),
        .idat(idat),
        .madr(madr),
        .mdat(mdat),
        .RIR(RIR),
        .WIR(WIR),
        .RPC(RPC),
        .CPC(CPC),
        .SDM(SDM),
        .WDR(WDR),
        .DOE(DOE));

    integer TX_FILE = 0;
    integer TX_ERROR = 0;
    
    initial begin    // Annotation process for clock clock
        #0;
        ANNOTATE_asb;
        ANNOTATE_rw;
        ANNOTATE_iadr;
        ANNOTATE_idat;
        ANNOTATE_madr;
        ANNOTATE_mdat;
        ANNOTATE_RIR;
        ANNOTATE_WIR;
        ANNOTATE_RPC;
        ANNOTATE_CPC;
        ANNOTATE_SDM;
        ANNOTATE_WDR;
        ANNOTATE_DOE;
        #OFFSET;
        forever begin
            #115;
            ANNOTATE_asb;
            ANNOTATE_rw;
            ANNOTATE_iadr;
            ANNOTATE_idat;
            ANNOTATE_madr;
            ANNOTATE_mdat;
            ANNOTATE_RIR;
            ANNOTATE_WIR;
            ANNOTATE_RPC;
            ANNOTATE_CPC;
            ANNOTATE_SDM;
            ANNOTATE_WDR;
            ANNOTATE_DOE;
            #85;
        end
    end

    initial begin  // Open the annotations file...
        TX_FILE = $fopen("C:\\Users\\ERIK\\Dropbox\\cmpen471\\projects\\pj5Alpha\\test1.ano");
        #10200 // Final time:  10200 ns
        $display("Success! Annotation Simulation Complete.");
        $fdisplay(TX_FILE, "Total[%d]", TX_ERROR);
        $fclose(TX_FILE);
        $finish;
    end

    initial begin
        // -------------  Current Time:  85ns
        #85;
        resetb = 1'b1;
        // -------------------------------------
        // -------------  Current Time:  685ns
        #600;
        resetb = 1'b0;
        // -------------------------------------
        // -------------  Current Time:  2285ns
        #1600;
        resetb = 1'b1;
        // -------------------------------------
        // -------------  Current Time:  206685ns
        #204400;
        resetb = 1'b0;
        // -------------------------------------
        // -------------  Current Time:  282685ns
        #76000;
        resetb = 1'b1;
    end

    task ANNOTATE_asb;
        #0 begin
            $fdisplay(TX_FILE, "Annotate[%d,asb,%b]", $time, asb);
            $fflush(TX_FILE);
            TX_ERROR = TX_ERROR + 1;
        end
    endtask

    task ANNOTATE_rw;
        #0 begin
            $fdisplay(TX_FILE, "Annotate[%d,rw,%b]", $time, rw);
            $fflush(TX_FILE);
            TX_ERROR = TX_ERROR + 1;
        end
    endtask

    task ANNOTATE_iadr;
        #0 begin
            $fdisplay(TX_FILE, "Annotate[%d,iadr,%b]", $time, iadr);
            $fflush(TX_FILE);
            TX_ERROR = TX_ERROR + 1;
        end
    endtask

    task ANNOTATE_idat;
        #0 begin
            $fdisplay(TX_FILE, "Annotate[%d,idat,%b]", $time, idat);
            $fflush(TX_FILE);
            TX_ERROR = TX_ERROR + 1;
        end
    endtask

    task ANNOTATE_madr;
        #0 begin
            $fdisplay(TX_FILE, "Annotate[%d,madr,%b]", $time, madr);
            $fflush(TX_FILE);
            TX_ERROR = TX_ERROR + 1;
        end
    endtask

    task ANNOTATE_mdat;
        #0 begin
            $fdisplay(TX_FILE, "Annotate[%d,mdat,%b]", $time, mdat);
            $fflush(TX_FILE);
            TX_ERROR = TX_ERROR + 1;
        end
    endtask

    task ANNOTATE_RIR;
        #0 begin
            $fdisplay(TX_FILE, "Annotate[%d,RIR,%b]", $time, RIR);
            $fflush(TX_FILE);
            TX_ERROR = TX_ERROR + 1;
        end
    endtask

    task ANNOTATE_WIR;
        #0 begin
            $fdisplay(TX_FILE, "Annotate[%d,WIR,%b]", $time, WIR);
            $fflush(TX_FILE);
            TX_ERROR = TX_ERROR + 1;
        end
    endtask

    task ANNOTATE_RPC;
        #0 begin
            $fdisplay(TX_FILE, "Annotate[%d,RPC,%b]", $time, RPC);
            $fflush(TX_FILE);
            TX_ERROR = TX_ERROR + 1;
        end
    endtask

    task ANNOTATE_CPC;
        #0 begin
            $fdisplay(TX_FILE, "Annotate[%d,CPC,%b]", $time, CPC);
            $fflush(TX_FILE);
            TX_ERROR = TX_ERROR + 1;
        end
    endtask

    task ANNOTATE_SDM;
        #0 begin
            $fdisplay(TX_FILE, "Annotate[%d,SDM,%b]", $time, SDM);
            $fflush(TX_FILE);
            TX_ERROR = TX_ERROR + 1;
        end
    endtask

    task ANNOTATE_WDR;
        #0 begin
            $fdisplay(TX_FILE, "Annotate[%d,WDR,%b]", $time, WDR);
            $fflush(TX_FILE);
            TX_ERROR = TX_ERROR + 1;
        end
    endtask

    task ANNOTATE_DOE;
        #0 begin
            $fdisplay(TX_FILE, "Annotate[%d,DOE,%b]", $time, DOE);
            $fflush(TX_FILE);
            TX_ERROR = TX_ERROR + 1;
        end
    endtask

endmodule

